#!/usr/bin/env python

import os, sys
import os.path
import subprocess

script_dir = os.path.dirname(os.path.realpath(__file__))
lib_dir = '%s/lib' % script_dir
if not os.path.isdir(lib_dir):
  print "lib directory is missing.  You must download the entire git repo to run this script"
  print "https://github.com/cmconner156/hue_scripts"
  sys.exit(1)

sys.path.insert(0, lib_dir)

if os.path.isfile('/usr/lib64/cmf/service/common/cloudera-config.sh'):
  locate_java = subprocess.Popen(['bash', '-c', '. /usr/lib64/cmf/service/common/cloudera-config.sh; locate_java_home'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
elif os.path.isfile('/opt/cloudera/cm-agent/service/common/cloudera-config.sh'):
  locate_java = subprocess.Popen(['bash', '-c', '. /opt/cloudera/cm-agent/service/common/cloudera-config.sh; locate_java_home'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)

JAVA_HOME = "UNKNOWN"

for line in iter(locate_java.stdout.readline,''):
   if 'JAVA_HOME' in line:
     JAVA_HOME = line.rstrip().split('=')[1]

if JAVA_HOME != "UNKNOWN":
  os.environ["JAVA_HOME"] = JAVA_HOME

if "JAVA_HOME" not in os.environ:
  print "JAVA_HOME must be set and can't be found, please set JAVA_HOME environment variable"
  sys.exit(1)

from cm_environment import Configurator
Configurator().set_cm_environment()

if "PARCELS_ROOT" in os.environ:
    parcel_dir = os.environ["PARCELS_ROOT"]
else:
    parcel_dir = "/opt/cloudera/parcels"

hue_bin_dir = parcel_dir + "/CDH/lib/hue/build/env/bin"
activate_file = hue_bin_dir + "/activate_this.py"
hue_bin = hue_bin_dir + "/hue"

import os; activate_this=os.path.join(os.path.dirname(os.path.realpath(activate_file)), 'activate_this.py'); exec(compile(open(activate_this).read(), activate_this, 'exec'), dict(__file__=activate_this)); del activate_this

with open(hue_bin, 'rU') as f:
  for line in f:
     if "__requires__" in line:
       desktop_ver = line.split("'")

__requires__ = desktop_ver[1]

import sys
from pkg_resources import load_entry_point
from django.conf import settings

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'desktop.settings')

from custom_commands.settings import *
settings.INSTALLED_APPS.append('custom_commands')

if __name__ == '__main__':
    sys.exit(
        load_entry_point('desktop', 'console_scripts', 'hue')()
    )
